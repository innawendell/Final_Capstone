{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Introduction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the first notebook https://github.com/innawendell/Final_Capstone/blob/master/Ads%20(1).ipynb, we built a recommendation model that was able to find the best matching titles for advertisements from a list of existing titles. Now, it is time for some experimentation: we will engage in the exciting task of `text generation`  and will try to train a recurrent neural network to generate an ad from scratch. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We will use a recurrent neural network to tackle this problem because these networks are particularly good for working with sequences. RNNs process “sequences explicitly as sequences”. In our case, we can feed a sequence of word vectors to it, one word vector at a time and not a sequence all at once (as we would do with other models). RNNs also have a unique ‘memory’ aspect to them: they ‘remember’ information from the beginning of the sequence which makes them ideal for text generation."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Our Approach"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Our process will include a few steps:\n",
    "\n",
    "**Preprocessing the data:**\n",
    "- We will remove punctuation from our texts and change them to lower case. It is important to mention that we will not lemmatize the texts because it is crucial for our model to learn the correct grammar usages from the data. So, for example, Russian nouns have six case forms in the singular and six case forms in the plural (twelve total). It will be very interesting to see if our Recurrent Neural Network can handle it. \n",
    "- Then, we will remove any duplicate entries.\n",
    "\n",
    "**Creation of the features with Word2Vec**\n",
    "- At this point, we will train Word2Vec model and evaluate it by a) checking most similar words to a random word (‘computer’) and b) creating a t-SNE plot and visually inspecting it.\n",
    "- Split our ads texts into training and test examples to be used for model training and evaluation.\n",
    "- We will have to narrow down our vocabulary to the most frequently used words (this is not a requirement but rather a limitation that is caused by computational power of my local machine).\n",
    "\n",
    "**RNN-specific steps**\n",
    "- We will create individual indices for each word in our narrowed-down vocabulary.\n",
    "- Then, we will convert our texts into sequences of indices.\n",
    "- We will turn our sequences into n-grams.\n",
    "- Create padded sequences, predictors, and labels.\n",
    "- Create embedding_matrix\n",
    "- Train our RNN model\n",
    "- Hallelujah: we can generate ads!!!\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Using TensorFlow backend.\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "import seaborn as sns\n",
    "from stop_words import get_stop_words\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "import gensim\n",
    "from gensim.models import word2vec\n",
    "from sklearn.model_selection import cross_val_predict\n",
    "import re\n",
    "import string\n",
    "from sklearn.metrics.pairwise import cosine_similarity\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from xgboost import XGBClassifier\n",
    "from sklearn.utils import shuffle\n",
    "from sklearn.model_selection import cross_val_score, GridSearchCV\n",
    "from sklearn.manifold import TSNE\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "from keras.layers import Dense, Input, Embedding, Dropout, GRU, Bidirectional, LSTM\n",
    "from keras.models import Sequential\n",
    "from keras.layers.normalization import BatchNormalization\n",
    "from keras.preprocessing.sequence import pad_sequences\n",
    "from keras.preprocessing.text import Tokenizer"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Loading and Preprocessing The Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "ads = pd.read_csv('/Users/admin/Documents/contextAdvertising1.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>atitle</th>\n",
       "      <th>atext</th>\n",
       "      <th>adomain</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Клуб активного отдыха «0.67»</td>\n",
       "      <td>Детский пейнтбол. Спортивный пейнтбол. Тактиче...</td>\n",
       "      <td>0-67.relax.by</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Антигравитационный чехол IPhone 5</td>\n",
       "      <td>Успейте купить антигравитационный чехол для IP...</td>\n",
       "      <td>0-antigravity.ru</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Антигравитационный чехол купить!</td>\n",
       "      <td>Антигравитационный чехол для телефона купить з...</td>\n",
       "      <td>0-antigravity.ru</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Беспроцентный заем от Moneyveo</td>\n",
       "      <td>Без справок! Получите до 3 000 грн. на карту п...</td>\n",
       "      <td>0-credit.moneyveo.ua</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Беспроцентный заем сотруднику</td>\n",
       "      <td>Акция! Получите Кредит Онлайн под 0%. Без Спра...</td>\n",
       "      <td>0-credit.moneyveo.ua</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              atitle  \\\n",
       "0       Клуб активного отдыха «0.67»   \n",
       "1  Антигравитационный чехол IPhone 5   \n",
       "2   Антигравитационный чехол купить!   \n",
       "3     Беспроцентный заем от Moneyveo   \n",
       "4      Беспроцентный заем сотруднику   \n",
       "\n",
       "                                               atext               adomain  \n",
       "0  Детский пейнтбол. Спортивный пейнтбол. Тактиче...         0-67.relax.by  \n",
       "1  Успейте купить антигравитационный чехол для IP...      0-antigravity.ru  \n",
       "2  Антигравитационный чехол для телефона купить з...      0-antigravity.ru  \n",
       "3  Без справок! Получите до 3 000 грн. на карту п...  0-credit.moneyveo.ua  \n",
       "4  Акция! Получите Кредит Онлайн под 0%. Без Спра...  0-credit.moneyveo.ua  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ads.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(799999, 3)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ads.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 799999 entries, 0 to 799998\n",
      "Data columns (total 3 columns):\n",
      "atitle     799999 non-null object\n",
      "atext      799983 non-null object\n",
      "adomain    799999 non-null object\n",
      "dtypes: object(3)\n",
      "memory usage: 18.3+ MB\n"
     ]
    }
   ],
   "source": [
    "ads.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>atitle</th>\n",
       "      <th>atext</th>\n",
       "      <th>adomain</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Клуб активного отдыха «0.67»</td>\n",
       "      <td>Детский пейнтбол. Спортивный пейнтбол. Тактиче...</td>\n",
       "      <td>0-67.relax.by</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Антигравитационный чехол IPhone 5</td>\n",
       "      <td>Успейте купить антигравитационный чехол для IP...</td>\n",
       "      <td>0-antigravity.ru</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Антигравитационный чехол купить!</td>\n",
       "      <td>Антигравитационный чехол для телефона купить з...</td>\n",
       "      <td>0-antigravity.ru</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Беспроцентный заем от Moneyveo</td>\n",
       "      <td>Без справок! Получите до 3 000 грн. на карту п...</td>\n",
       "      <td>0-credit.moneyveo.ua</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Беспроцентный заем сотруднику</td>\n",
       "      <td>Акция! Получите Кредит Онлайн под 0%. Без Спра...</td>\n",
       "      <td>0-credit.moneyveo.ua</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                              atitle  \\\n",
       "0       Клуб активного отдыха «0.67»   \n",
       "1  Антигравитационный чехол IPhone 5   \n",
       "2   Антигравитационный чехол купить!   \n",
       "3     Беспроцентный заем от Moneyveo   \n",
       "4      Беспроцентный заем сотруднику   \n",
       "\n",
       "                                               atext               adomain  \n",
       "0  Детский пейнтбол. Спортивный пейнтбол. Тактиче...         0-67.relax.by  \n",
       "1  Успейте купить антигравитационный чехол для IP...      0-antigravity.ru  \n",
       "2  Антигравитационный чехол для телефона купить з...      0-antigravity.ru  \n",
       "3  Без справок! Получите до 3 000 грн. на карту п...  0-credit.moneyveo.ua  \n",
       "4  Акция! Получите Кредит Онлайн под 0%. Без Спра...  0-credit.moneyveo.ua  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ads.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "At this point, it becomes important to remove all the punctuation signs, change all words to lowercase, and remove any white spaces that we might have. We will remove any duplicate texts that we might have in our data and split our text strings into lists of strings, so that they can be used for training word2vec model. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Remove Punctuation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#include all the punctuation signs\\n\",\n",
    "def punctuation_remover(row):\n",
    "    punctuation = '!\"#$&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~«»'\n",
    "    \n",
    "    punctuationNoPeriod = \"[\" + re.sub(\"\\.\",\"\", punctuation) + \"]\"\n",
    "    row = re.sub(punctuationNoPeriod, \" \", str(row))\n",
    "    #to remove double white spaces and create space after %,\n",
    "    row = row.replace('  ', ' ')\n",
    "    row = row.replace('%', '% ')\n",
    "    return row.strip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# remove punctuation from the ads text\n",
    "ads['atext'] = ads['atext'].apply(punctuation_remover)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# remove punctuation from the ads text\n",
    "ads['atitle'] = ads['atitle'].apply(punctuation_remover)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "atitle     557981\n",
       "atext      348409\n",
       "adomain     19181\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ads.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "789564"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(ads['atitle'] + ads['atext']).nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def text_parser_first(series): \n",
    "    series_copy = series.copy()\n",
    "    list_of_strings = []\n",
    "    for row in series:\n",
    "        row= row.lower().strip()      \n",
    "        list_of_strings.append(row)\n",
    "    return list_of_strings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "ads['atitle'] = text_parser_first(ads['atitle'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "ads['atext'] = text_parser_first(ads['atext'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Drop Any Duplicate Entries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "unique =ads.drop_duplicates(subset = ['atext'], keep=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "unique =unique.drop_duplicates(subset = ['atitle'], keep=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "unique = unique.drop_duplicates(keep=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "atitle     192694\n",
       "atext      192694\n",
       "adomain      4465\n",
       "dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "unique.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(192694, 3)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "unique.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "def text_parser_second(series): \n",
    "    series_copy = series.copy()\n",
    "    list_of_strings = []\n",
    "    for row in series:\n",
    "        row= row.split()      \n",
    "        list_of_strings.append(row)\n",
    "    return list_of_strings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "split_ads = unique.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(192694, 3)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "split_ads.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "split_ads['atitle'] = text_parser_second(unique['atitle'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "split_ads['atext'] = text_parser_second(unique['atext'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>atitle</th>\n",
       "      <th>atext</th>\n",
       "      <th>adomain</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[клуб, активного, отдыха, 0, 67]</td>\n",
       "      <td>[детский, пейнтбол, спортивный, пейнтбол, такт...</td>\n",
       "      <td>0-67.relax.by</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[антигравитационный, чехол, iphone, 5]</td>\n",
       "      <td>[успейте, купить, антигравитационный, чехол, д...</td>\n",
       "      <td>0-antigravity.ru</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>[беспроцентный, заем, от, moneyveo]</td>\n",
       "      <td>[без, справок, получите, до, 3, 000, грн, на, ...</td>\n",
       "      <td>0-credit.moneyveo.ua</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[беспроцентный, заем, сотруднику]</td>\n",
       "      <td>[акция, получите, кредит, онлайн, под, 0%, без...</td>\n",
       "      <td>0-credit.moneyveo.ua</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>[аnti, gravity, case]</td>\n",
       "      <td>[аnti, gravity, case, –, уникальный, антиграви...</td>\n",
       "      <td>0-gravity.online-shop-2017.ru</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                    atitle  \\\n",
       "0         [клуб, активного, отдыха, 0, 67]   \n",
       "1   [антигравитационный, чехол, iphone, 5]   \n",
       "3      [беспроцентный, заем, от, moneyveo]   \n",
       "4        [беспроцентный, заем, сотруднику]   \n",
       "11                   [аnti, gravity, case]   \n",
       "\n",
       "                                                atext  \\\n",
       "0   [детский, пейнтбол, спортивный, пейнтбол, такт...   \n",
       "1   [успейте, купить, антигравитационный, чехол, д...   \n",
       "3   [без, справок, получите, до, 3, 000, грн, на, ...   \n",
       "4   [акция, получите, кредит, онлайн, под, 0%, без...   \n",
       "11  [аnti, gravity, case, –, уникальный, антиграви...   \n",
       "\n",
       "                          adomain  \n",
       "0                   0-67.relax.by  \n",
       "1                0-antigravity.ru  \n",
       "3            0-credit.moneyveo.ua  \n",
       "4            0-credit.moneyveo.ua  \n",
       "11  0-gravity.online-shop-2017.ru  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "split_ads.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['нужен', 'бухгалтер']"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "split_ads.iloc[10, 0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['бухгалтер', 'под', 'ключ', 'дешево']"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "split_ads.iloc[10, 1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "split_ads['combined'] = split_ads['atext'] +split_ads['atitle']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Train Word2Vec "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Our decision to train word2vec model on both ad texts and ad titles stems from the fact that, if we had a pretrained model at hand, it would have been trained on a very large corpus. We will need to evaluate our word2vec model. Here, we will check its performance by looking at the most similar words to the word ‘computer’. The results include other case forms of the word 'computer' ('компьютере', 'компьютера') which makes sense. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "model_w2v = word2vec.Word2Vec(\n",
    "    split_ads['combined'],\n",
    "    workers=4,     \n",
    "    min_count=15,   \n",
    "    window=30,      \n",
    "    sg=0,          \n",
    "    sample=1e-3 ,  \n",
    "    size=100,      \n",
    "    hs=1           \n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "word_vectors = model_w2v.wv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "13613\n"
     ]
    }
   ],
   "source": [
    "vocabulary = model_w2v.wv.vocab.keys()\n",
    "print(len(vocabulary))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('компьютере', 0.7363376617431641),\n",
       " ('то', 0.6972121596336365),\n",
       " ('компьютера', 0.6941441893577576),\n",
       " ('4xddr3', 0.6882896423339844),\n",
       " ('прочистка', 0.6874386668205261),\n",
       " ('пройти', 0.6871018409729004),\n",
       " ('струйный', 0.6861037015914917),\n",
       " ('smart', 0.6846106648445129),\n",
       " ('купим', 0.684134304523468),\n",
       " ('1200x1200', 0.6828628182411194)]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_w2v.wv.most_similar_cosmul(positive=['компьютер'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## T-SNE Plot "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Another useful way to analyze our word2vec model is visual inspection of the t-SNE plot. In our case, it shows that the model was able to learn important similarities (e.g. ‘hotel’, another case of 'hotel,' and ‘inn’ are almost overlapping, whereas‘asus’, 'acer', 'dell,' and 'hp' are very close to one another). \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.manifold import TSNE\n",
    "def tsne_plot(model):\n",
    "    #Creates and TSNE model and plots it\n",
    "    \n",
    "    labels = []\n",
    "    tokens = []\n",
    "\n",
    "    for word in model.wv.vocab:\n",
    "        if model.wv.vocab[word].count > 1000:\n",
    "            tokens.append(model[word])\n",
    "            labels.append(word)\n",
    "    \n",
    "    tsne_model = TSNE(perplexity=40, n_components=2, init='pca', n_iter=2500, random_state=108)\n",
    "    new_values = tsne_model.fit_transform(tokens)\n",
    "\n",
    "    x = []\n",
    "    y = []\n",
    "    \n",
    "    for value in new_values:\n",
    "        x.append(value[0])\n",
    "        y.append(value[1])\n",
    "        \n",
    "    plt.figure(figsize=(20, 20)) \n",
    "    for i in range(len(x)):\n",
    "        plt.scatter(x[i],y[i])\n",
    "        plt.annotate(labels[i],\n",
    "                     xy=(x[i], y[i]),\n",
    "                     xytext=(5, 2),\n",
    "                     textcoords='offset points',\n",
    "                     ha='right',\n",
    "                     va='bottom')\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x1440 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "tsne_plot(model_w2v)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Train-Test Split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = split_ads['atext']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test = train_test_split(X, test_size=0.3, random_state=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "134885"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(X_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "57809"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(X_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Our computational limitations made it necessary to restrict our vocabulary only to `the most frequently used words.` For these, we will create individual indices and convert texts into sequences of indices.\n",
    "Words that are not in our vocabulary will be marked by ‘-1’ and later removed from the sequences.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "MAX_NB_WORDS = len(vocabulary)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "13613"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "MAX_NB_WORDS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "from collections import Counter\n",
    "vocab=Counter()\n",
    "\n",
    "for entry in X_train:\n",
    "    vocab.update(entry)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "80569"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(vocab)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "word_index = {t[0]: i+1 for i,t in enumerate(vocab.most_common(MAX_NB_WORDS))}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "купить\n",
      "dell\n",
      "монитор\n",
      "dell\n",
      "se2416h\n",
      "416h\n",
      "2078\n",
      "жк\n",
      "мониторы\n",
      "23\n"
     ]
    }
   ],
   "source": [
    "for i in X_train.iloc[2]:\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "training_sequences = [[word_index.get(t, -1) for t in ad_text]\n",
    "             for ad_text in X_train]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_sequences = [[word_index.get(t, -1) for t in ad_text]\n",
    "             for ad_text in X_test]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "def back_transformer(input):\n",
    "    larger_rows =[]\n",
    "    for index, row in enumerate(input):\n",
    "        new_rows =[]\n",
    "        for num, ind in enumerate(row):\n",
    "            if num <=21 and ind!=-1:\n",
    "                new_rows.append(ind)\n",
    "        larger_rows.append(new_rows)\n",
    "    return larger_rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "seqtr_training = back_transformer(training_sequences)\n",
    "seqtr_test = back_transformer(test_sequences)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max([len(x) for x in seqtr_training])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "19"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max([len(x) for x in seqtr_test])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "MAX_SEQUENCE_LENGTH = max([len(x) for x in seqtr_training])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### N-Gram Generation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "At this stage, we will create n-grams, from each indexed sequence, adding a one word at a time. This will be useful for us  if we wish to train a model that predicts the next word in sequence. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "def ngram_sequence_generator(input_text):\n",
    "    ngram_inputs = []\n",
    "    for entry in input_text:\n",
    "        for i in range(1, len(entry)):\n",
    "            ngram_seq = entry[:i+1]\n",
    "            ngram_inputs.append(ngram_seq)\n",
    "            \n",
    "    return ngram_inputs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [],
   "source": [
    "ngram_input_sequences_training = ngram_sequence_generator(seqtr_training)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "ngram_input_sequences_test = ngram_sequence_generator(seqtr_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[2382, 468],\n",
       " [2382, 468, 7],\n",
       " [2382, 468, 7, 1],\n",
       " [2382, 468, 7, 1, 5],\n",
       " [2382, 468, 7, 1, 5, 4],\n",
       " [2382, 468, 7, 1, 5, 4, 6],\n",
       " [4267, 135],\n",
       " [4267, 135, 118],\n",
       " [4267, 135, 118, 3295],\n",
       " [4267, 135, 118, 3295, 10],\n",
       " [4267, 135, 118, 3295, 10, 47],\n",
       " [4267, 135, 118, 3295, 10, 47, 208],\n",
       " [4267, 135, 118, 3295, 10, 47, 208, 198],\n",
       " [3, 207],\n",
       " [3, 207, 127],\n",
       " [3, 207, 127, 207],\n",
       " [3, 207, 127, 207, 274],\n",
       " [3, 207, 127, 207, 274, 291],\n",
       " [3, 207, 127, 207, 274, 291, 411],\n",
       " [187, 275]]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ngram_input_sequences_training[:20]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Padding. Creation of Predictors and Labels"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we are approaching the final stages of our pipeline. First, we will pad our n-gram sequences. Despite the fact that the ability to take sequences of any length is one of the main strength of RNN, the way Keras works makes it necessary for us to `create padded sequences` of the same length (max length). Then, we will split our padded sequences into `‘predictors’` and `‘labels’`. For example, for predictor [2382, 468], the label will be [7]. We will make all labels categorical (by using Keras’s ‘to_categorical’ which converts our class vector into binary class matrix which we can use with ‘categofical_crossentropy.’"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "from keras.utils import to_categorical\n",
    "def generate_padded_sequence(input_sequences):\n",
    "    input_sequences = pad_sequences(input_sequences, maxlen=MAX_SEQUENCE_LENGTH, \n",
    "                     padding=\"pre\")\n",
    "    predictors = []\n",
    "    labels = []\n",
    "    for i in range(len(input_sequences)-1):\n",
    "        predictor = input_sequences[i]\n",
    "        label = input_sequences[i+1][-1]\n",
    "        label_cat = to_categorical(label, num_classes=MAX_NB_WORDS+1)\n",
    "        predictors.append(predictor)\n",
    "        labels.append(label_cat)\n",
    "    \n",
    "    #label = to_categorical(label, num_classes=MAX_NB_WORDS+1)\n",
    "    return np.array(predictors), np.array(labels)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[2382, 468],\n",
       " [2382, 468, 7],\n",
       " [2382, 468, 7, 1],\n",
       " [2382, 468, 7, 1, 5],\n",
       " [2382, 468, 7, 1, 5, 4],\n",
       " [2382, 468, 7, 1, 5, 4, 6],\n",
       " [4267, 135],\n",
       " [4267, 135, 118],\n",
       " [4267, 135, 118, 3295],\n",
       " [4267, 135, 118, 3295, 10],\n",
       " [4267, 135, 118, 3295, 10, 47],\n",
       " [4267, 135, 118, 3295, 10, 47, 208],\n",
       " [4267, 135, 118, 3295, 10, 47, 208, 198],\n",
       " [3, 207],\n",
       " [3, 207, 127],\n",
       " [3, 207, 127, 207],\n",
       " [3, 207, 127, 207, 274],\n",
       " [3, 207, 127, 207, 274, 291],\n",
       " [3, 207, 127, 207, 274, 291, 411],\n",
       " [187, 275]]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ngram_input_sequences_training[:20]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "predictors_tr_s, label_tr_s = generate_padded_sequence(ngram_input_sequences_training)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "predictors_test_s, label_test_s = generate_padded_sequence(ngram_input_sequences_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Creation of Embedding Matrix"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "At this point, will create embeddings matrix that will hold word vector values for each indexed word from our most frequently used words. This embeddings matrix will later be used in the Keras Embeddings layer (to be used in ‘weights’)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [],
   "source": [
    "length_maxtrix = len(vocabulary)+1\n",
    "\n",
    "embedding_matrix = np.zeros((length_maxtrix, 100))\n",
    "\n",
    "for word, i in word_index.items():\n",
    "    if i >= MAX_NB_WORDS:\n",
    "            continue\n",
    "    try:        \n",
    "        embedding_vector = word_vectors[word]\n",
    "        # words not found in embedding index will be all-zeros.\n",
    "        if embedding_vector is not None:  \n",
    "            embedding_matrix[i] = embedding_vector\n",
    "    except:\n",
    "        pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "WV_DIM = 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "13613"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "MAX_NB_WORDS"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Training Our Recurrent Neural Network"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we are ready to create recurrent neural network. In this case, for computational reasons, we used two GRU layers, 100 units each. In the future, it will be possible to increase both the number of layers and the number of units. We fit the model on our training examples of predictors and labels (‘the words to be predicted’) and test it on the test examples."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "model_gen_larger = Sequential()\n",
    "model_gen_larger.add(Embedding(MAX_NB_WORDS +1,\n",
    "                     WV_DIM,\n",
    "                     weights=[embedding_matrix],\n",
    "                     input_length=MAX_SEQUENCE_LENGTH,\n",
    "                     trainable=False))\n",
    "\n",
    "model_gen_larger.add(GRU(100, return_sequences=True))\n",
    "model_gen_larger.add(Dropout(0.2))\n",
    "model_gen_larger.add(GRU(100))\n",
    "model_gen_larger.add(Dropout(0.2))\n",
    "model_gen_larger.add(BatchNormalization())\n",
    "model_gen_larger.add(Dense(MAX_NB_WORDS+1, activation = 'softmax'))\n",
    "\n",
    "model_gen_larger.compile(loss='categorical_crossentropy', \n",
    "                   optimizer = 'adam', \n",
    "                   metrics = ['accuracy']) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "embedding_1 (Embedding)      (None, 21, 100)           1361400   \n",
      "_________________________________________________________________\n",
      "gru_1 (GRU)                  (None, 21, 100)           60300     \n",
      "_________________________________________________________________\n",
      "dropout_1 (Dropout)          (None, 21, 100)           0         \n",
      "_________________________________________________________________\n",
      "gru_2 (GRU)                  (None, 100)               60300     \n",
      "_________________________________________________________________\n",
      "dropout_2 (Dropout)          (None, 100)               0         \n",
      "_________________________________________________________________\n",
      "batch_normalization_1 (Batch (None, 100)               400       \n",
      "_________________________________________________________________\n",
      "dense_1 (Dense)              (None, 13614)             1375014   \n",
      "=================================================================\n",
      "Total params: 2,857,414\n",
      "Trainable params: 1,495,814\n",
      "Non-trainable params: 1,361,600\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model_gen_larger.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now is the time for training: time for patience because training neural networks is notoriously time-consuming."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 1025471 samples, validate on 436028 samples\n",
      "Epoch 1/30\n",
      "1025471/1025471 [==============================] - 1011s 986us/step - loss: 4.6316 - acc: 0.3513 - val_loss: 3.6718 - val_acc: 0.4380\n",
      "Epoch 2/30\n",
      "1025471/1025471 [==============================] - 1072s 1ms/step - loss: 3.7565 - acc: 0.4220 - val_loss: 3.4513 - val_acc: 0.4628\n",
      "Epoch 3/30\n",
      "1025471/1025471 [==============================] - 1051s 1ms/step - loss: 3.5699 - acc: 0.4391 - val_loss: 3.3667 - val_acc: 0.4744\n",
      "Epoch 4/30\n",
      "1025471/1025471 [==============================] - 1077s 1ms/step - loss: 3.4736 - acc: 0.4479 - val_loss: 3.3205 - val_acc: 0.4809\n",
      "Epoch 5/30\n",
      "1025471/1025471 [==============================] - 1068s 1ms/step - loss: 3.4117 - acc: 0.4542 - val_loss: 3.2900 - val_acc: 0.4848\n",
      "Epoch 6/30\n",
      "1025471/1025471 [==============================] - 1187s 1ms/step - loss: 3.3696 - acc: 0.4576 - val_loss: 3.2723 - val_acc: 0.4885\n",
      "Epoch 7/30\n",
      "1025471/1025471 [==============================] - 1335s 1ms/step - loss: 3.3345 - acc: 0.4616 - val_loss: 3.2574 - val_acc: 0.4902\n",
      "Epoch 8/30\n",
      "1025471/1025471 [==============================] - 1450s 1ms/step - loss: 3.3076 - acc: 0.4640 - val_loss: 3.2511 - val_acc: 0.4919\n",
      "Epoch 9/30\n",
      "1025471/1025471 [==============================] - 1134s 1ms/step - loss: 3.2848 - acc: 0.4652 - val_loss: 3.2379 - val_acc: 0.4934\n",
      "Epoch 10/30\n",
      "1025471/1025471 [==============================] - 1139s 1ms/step - loss: 3.2679 - acc: 0.4678 - val_loss: 3.2285 - val_acc: 0.4941\n",
      "Epoch 11/30\n",
      "1025471/1025471 [==============================] - 1154s 1ms/step - loss: 3.2513 - acc: 0.4686 - val_loss: 3.2228 - val_acc: 0.4966\n",
      "Epoch 12/30\n",
      "1025471/1025471 [==============================] - 1218s 1ms/step - loss: 3.2386 - acc: 0.4701 - val_loss: 3.2164 - val_acc: 0.4976\n",
      "Epoch 13/30\n",
      "1025471/1025471 [==============================] - 1211s 1ms/step - loss: 3.2259 - acc: 0.4712 - val_loss: 3.2142 - val_acc: 0.4980\n",
      "Epoch 14/30\n",
      "1025471/1025471 [==============================] - 1178s 1ms/step - loss: 3.2151 - acc: 0.4727 - val_loss: 3.2129 - val_acc: 0.4981\n",
      "Epoch 15/30\n",
      "1025471/1025471 [==============================] - 1205s 1ms/step - loss: 3.2071 - acc: 0.4730 - val_loss: 3.2126 - val_acc: 0.4987\n",
      "Epoch 16/30\n",
      "1025471/1025471 [==============================] - 1205s 1ms/step - loss: 3.2000 - acc: 0.4734 - val_loss: 3.2049 - val_acc: 0.4993\n",
      "Epoch 17/30\n",
      "1025471/1025471 [==============================] - 1215s 1ms/step - loss: 3.1896 - acc: 0.4750 - val_loss: 3.1987 - val_acc: 0.5008\n",
      "Epoch 18/30\n",
      "1025471/1025471 [==============================] - 1183s 1ms/step - loss: 3.1829 - acc: 0.4753 - val_loss: 3.1976 - val_acc: 0.5009\n",
      "Epoch 19/30\n",
      "1025471/1025471 [==============================] - 1151s 1ms/step - loss: 3.1757 - acc: 0.4760 - val_loss: 3.1985 - val_acc: 0.5015\n",
      "Epoch 20/30\n",
      "1025471/1025471 [==============================] - 1143s 1ms/step - loss: 3.1705 - acc: 0.4769 - val_loss: 3.1910 - val_acc: 0.5010\n",
      "Epoch 21/30\n",
      "1025471/1025471 [==============================] - 1142s 1ms/step - loss: 3.1649 - acc: 0.4773 - val_loss: 3.1892 - val_acc: 0.5024\n",
      "Epoch 22/30\n",
      "1025471/1025471 [==============================] - 1092s 1ms/step - loss: 3.1599 - acc: 0.4773 - val_loss: 3.1894 - val_acc: 0.5022\n",
      "Epoch 23/30\n",
      "1025471/1025471 [==============================] - 1094s 1ms/step - loss: 3.1553 - acc: 0.4781 - val_loss: 3.1899 - val_acc: 0.5027\n",
      "Epoch 24/30\n",
      "1025471/1025471 [==============================] - 1106s 1ms/step - loss: 3.1516 - acc: 0.4784 - val_loss: 3.1841 - val_acc: 0.5028\n",
      "Epoch 25/30\n",
      "1025471/1025471 [==============================] - 1052s 1ms/step - loss: 3.1456 - acc: 0.4791 - val_loss: 3.1826 - val_acc: 0.5035\n",
      "Epoch 26/30\n",
      "1025471/1025471 [==============================] - 1090s 1ms/step - loss: 3.1417 - acc: 0.4797 - val_loss: 3.1835 - val_acc: 0.5034\n",
      "Epoch 27/30\n",
      "1025471/1025471 [==============================] - 1043s 1ms/step - loss: 3.1386 - acc: 0.4793 - val_loss: 3.1848 - val_acc: 0.5028\n",
      "Epoch 28/30\n",
      "1025471/1025471 [==============================] - 1075s 1ms/step - loss: 3.1354 - acc: 0.4800 - val_loss: 3.1780 - val_acc: 0.5035\n",
      "Epoch 29/30\n",
      "1025471/1025471 [==============================] - 1064s 1ms/step - loss: 3.1313 - acc: 0.4803 - val_loss: 3.1811 - val_acc: 0.5038\n",
      "Epoch 30/30\n",
      "1025471/1025471 [==============================] - 1062s 1ms/step - loss: 3.1288 - acc: 0.4804 - val_loss: 3.1774 - val_acc: 0.5040\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x15fa74390>"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_gen_larger.fit(predictors_tr_s, label_tr_s, \n",
    "               epochs = 30, \n",
    "               verbose=1,\n",
    "               batch_size=300,\n",
    "               shuffle=True,\n",
    "               validation_data = (predictors_test_s, label_test_s))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Text Generation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We are ready for some exciting experiments. We can generate ads. Let’s plug in some frequently advertised items and see what we get. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "def generate_text(seed_text, next_words, model, max_sequence_len):\n",
    "    output_sequence = ''\n",
    "    for _ in range(next_words):\n",
    "        seed_text = seed_text.lower()\n",
    "        seed_list = seed_text.split()\n",
    "        token_list = [word_index.get(word)for word in seed_list]\n",
    "        \n",
    "        token_list= pad_sequences([token_list], maxlen=MAX_SEQUENCE_LENGTH, padding=\"pre\")\n",
    "        predicted = model.predict_classes(token_list, verbose=0)\n",
    "        #print(token_list, 'predicted', predicted)\n",
    "        output_word = \"\"\n",
    "        for word,index in word_index.items():\n",
    "            if index == predicted:\n",
    "                output_word = word\n",
    "                break\n",
    "        seed_text += \" \"+output_word\n",
    "    for word in seed_list:\n",
    "        output_sequence+=word+ ' '\n",
    "    return output_sequence.strip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'двери межкомнатные подарок установка или фурнитура для ванной комнаты установка и подарок выбор для дома и дома сравните цены всех'"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('двери', 20, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'interroom doors gift setup or accessories for (your) bathroom set up and gift choice for (your) home compare prices of all'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'цветы в москве в москве от 3500 руб за 3 дня успей от 3500 руб'"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('цветы', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'flowers in moscow in moscow from 3500 rubles in three days don't miss your chance from 3500 rubles'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'телефон от 00 доставка для авто в москве звоните от производителя в москве наличии от'"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('телефон', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'phone from 00 delivery for car in moscow call from manufacturer in moscow in stock from'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'телевизоры сравните цены всех интернет магазинов сравните цены всех интернет магазинов сравните цены всех интернет'"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('телевизоры', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'TV-sets compare prices of all online stores compare prices of all online stores compare prices of all online stores compare prices of all online stores'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'окна в хабаровске от производителя скидка на все 5% бесплатная доставка сравните цены всех интернет магазинов'"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('окна', 16, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'windows in Khabarovsk from manufacturer 5% off everything free delivery compare prices of all online stores'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'стрижки волос philips 10 низкая цена гарантия большой выбор быстрая доставка сравните цены всех интернет'"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('стрижки', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'haircuts philips 10 low prices warranty large selection fast delivery compare prices of all online'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'машинка шлифовальная прямая bosch pws 125 ce 125 ce гарантия 100% покупай сравните цены всех'"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('машинка', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'polishing machine bosch pws 125 ce 125 125 ce warranty 100% buy compare prices of all'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'цены от 2000 руб сут бронируйте отель без комиссии и переплат сравните цены всех интернет магазинов на сайте'"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('цены', 18, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'prices from 2000 rubles per night book a hotel without fees and extra charges compare prices of all online stores on the website'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'интернет магазин эротических костюмов бесплатная доставка по рб скидки и акции для вас сравните цены всех интернет магазинов сравните цены'"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('интернет', 20, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'online store of adult clothing free delivery in Belarus discounts and promos for you compare prices of all online stores'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'отель в чите wifi уютно удобно скидка 42% документы жмите от производителя hp hp 15 в 220 вольт сравните цены'"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('отель', 20, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'hotel in Chita wifi cozy convenient 42% off documents click (here) from manufacturer hp hp 15 (?) 220 volt compare prices'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'отели в центре петербурга в центре города от 1200 р онлайн и в наличии за руб купить сравните цены всех'"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('отели', 20, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'hotels in downtown St. Petersburg from 1200 rubles online and in stock for rub. buy compare prices of all'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'шкаф купе от производителя в краснодаре низкие цены распродажа в москве доставка по россии россии'"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('шкаф', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'rolling door wardrobe from manufacturer in Krasnoyarsk low prices sales in Moscow delivery all across Russia across Russia'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'купите утеплитель урса по выгодной цене гарантия доставка по рф сравните цены всех интернет магазинов'"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('купите', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'ursa insulation good price warranty delivery across russia compare prices of all online stores'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'пылесос bosch gas 24 24 р гарантия 100% покупайте для детей на сайте сравните цены'"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('пылесос', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'vacuum cleaner bosch gas 24 24 r (rubles) warranty 100% buy for (your) children on the website compare prices'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'мебель для ванной сравните цены всех интернет магазинов на сайте сравните цены всех интернет магазинов'"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('мебель', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'bathroom furniture compare prices of all online stores compare prices of all online stores compare prices of all online stores'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'смартфон samsung galaxy a5 2016 a510f 10р гарантия 100% сравните цены всех интернет магазинов сравните'"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('смартфон', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'smartphone samsung galaxy a5 2016 a510f 10 r. (rubles) warranty 100% compare prices of all online stores compare'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'скидки 35% распродажи супер акции шок цены наличии на сайте сравните цены всех интернет магазинов'"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('скидки', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'discounts 35% sales super deals shockingly low prices in stock on the website compare prices of all online stores'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'скидка 10% на все 5% бесплатная доставка по россии для дома сравните цены всех интернет магазинов'"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('скидка', 16, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: '10% off discount on everything 5% free delivery across russia for home compare prices of all online stores'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'распродажа день пт подарок доставка рф от 2 дня жми сюда на сайте сравните цены'"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('распродажа', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'sale day friday gift delivery russia from two days click here on the website compare prices'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'квартиры в от застройщиков много объектов скидки от производителя низкие цены звоните от производителя производителя'"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('квартиры', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Translation: 'apartments in from the construction companies many locations discounts from the manufacturer low prices call from the manufacturer from the manufacturer'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'стиральная машина lg f12u1hbs2 00 р гарантия 100% купите онлайн сравните цены всех интернет магазинов сравните'"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('стиральная машина', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'монтаж натяжных потолков гарантия 12 лет установка и уборка за 2 часа рассрочка от 2 часа звоните от 400 руб'"
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('монтаж', 20, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'фотографии с доставкой по москве и области в наличии и под заказ доставка по россии сравните цены всех интернет магазинов'"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('фотографии', 20, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'фото светильник с вау эффектом от 3200р жми в москве и области в москве и области по лучшим ценам в'"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('фото', 20, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'перевозки транспортная компания решаем вопрос перевозок от производителя в наличии сравните цены всех интернет магазинов'"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('перевозки', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'акции от 1100 руб сут скидки завтраки отзывы контакты отеля bosch сравните цены всех интернет'"
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('акции', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'такси в аэропорт пулково от 125 р заказывайте дешевле в 220 вольт от производителя в'"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('такси', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'холодильник waeco низкая цена доставка гарантия сравните цены всех интернет магазинов сравните цены всех интернет'"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('холодильник', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'мышка для геймера за руб доставка по россии от производителя в наличии и под заказ'"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('мышка', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'ножи от 00 доставка в москве в москве доставка по россии звоните от производителя в москве наличии от производителя hp'"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('ножи', 20, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'стол для кухни сравните цены всех интернет магазинов на сайте сравните цены всех интернет магазинов'"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('стол', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'продукты для дома в москве от производителя низкие цены и доставка для вас сравните цены'"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('продукты', 15, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'фен philips низкая цена гарантия большой выбор быстрая доставка гарантия жми сравните цены всех интернет магазинов'"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "generate_text('фен', 16, model_gen_larger, 15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Conclusion: "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Despite some noticable glitches (overuse of certain frequent phrases like `\"compare prices of all internet stores\",` `\"directly from the manufacturer\"` and `inappropriate insertion of words` ('hp' in texts about knives, apartments, and hotels and '220 volt' in a text about hotels, the model still looks `very promising` because it has managed to produce `correct grammatical forms` (e.g. the genitive case after the prepositions  \"от\" and \"для\"(\"from\" and \"for\"), the prepositional case for \"location\". Additionally, it has `learned some frequently used catch phrases` within the advertising genre (\"low prices\", \"warranty\", \"free delivery\", \"discounts\", \"sale\", \"10% off\") \n",
    "\n",
    "As we continue developing this product in the future, it could become an integral part of an online advertisement platform that would give customers an option to auto-generate advertisements from scratch: fast, efficient, with no human labor involved. Additionally, we could develop a model that would be able to take product descriptions and make fully customized ads.  A nice side perk is that the same model can suggest the next word/s as a person is typing an ad (just like ‘smart compose’ in gmail which is only available in English). "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
